# Using a multiplication expression, create a variable `minutes_in_a_day` that
# is equal to the number of minutes in a day
minutes_in_a_day <- 24 * 60
# Using a multiplication expression, create a variable `hours_in_a_year` that
# is equal to the number of hours in a year
hours_in_a_year <- 365 * 24
# Create a variable `more_minutes_than_hours` that is a boolean (TRUE/FALSE)
# It should be TRUE if there are more minutes/day than hours/year
# Otherwise, it should be FALSE
more_minutes_than_hours <- minutes_in_a_day < hours_in_a_year
### Working with Functions ####################################################
# Write a function named `make_introduction()` that takes in
# two arguments called `name` and `age`
# This function should return a string value equal to
# "Hello, my name is {name}, and I'm {age} years old." but {name} and {age}
# should take on the values passed to the function
# Make sure that proper spacing is used (e.g., you shouldn't have multiple
# spaces between words, and you should have a space after a comma)
# Hint: Google search for "R paste paste0 difference"
#       Try reading a few pages to understand how to use each
make_introduction <- function(name, age) {
new_string <- paste0("Hello, my name is ", name, ", and I'm ", age, " years old.")
return(new_string)
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction(my_name, my_age)
# Create a variable `casual_intro` by substituting "Hello, my name is",
# with "Hey, I'm" in your `my_intro` variable
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
print(casual_intro)
?str_to_title
capitalized_intro <- str_to_title(my_intro)
occurences <- str_count("e", my_intro)
?str_count
occurences <- str_count(my_intro, "e")
capitalized_intro <- str_to_title(my_intro)
quiet_intro <- tolower(my_intro)
loud_intro <- toupper(my_intro)
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
minutes_in_two_days <- double(minutes_in_a_day)
# Assignment 2: Foundational Skills
#
# Before you get started:
# - Set your working directory to "source file location" using the Session menu
# - Run the following line of code to delete all variables in your workspace
#     (This will make it easier to test your script)
rm(list = ls())
### Set Up and Defining Variables #############################################
# Load the `stringr` package (install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a variable `my_age` that is equal to your age
my_age <- 19
# Create a variable `my_name` that is equal to your first name
my_name <- "Kevin"
# Using a multiplication expression, create a variable `minutes_in_a_day` that
# is equal to the number of minutes in a day
minutes_in_a_day <- 24 * 60
# Using a multiplication expression, create a variable `hours_in_a_year` that
# is equal to the number of hours in a year
hours_in_a_year <- 365 * 24
# Create a variable `more_minutes_than_hours` that is a boolean (TRUE/FALSE)
# It should be TRUE if there are more minutes/day than hours/year
# Otherwise, it should be FALSE
more_minutes_than_hours <- minutes_in_a_day < hours_in_a_year
### Working with Functions ####################################################
# Write a function named `make_introduction()` that takes in
# two arguments called `name` and `age`
# This function should return a string value equal to
# "Hello, my name is {name}, and I'm {age} years old." but {name} and {age}
# should take on the values passed to the function
# Make sure that proper spacing is used (e.g., you shouldn't have multiple
# spaces between words, and you should have a space after a comma)
# Hint: Google search for "R paste paste0 difference"
#       Try reading a few pages to understand how to use each
make_introduction <- function(name, age) {
new_string <- paste0("Hello, my name is ", name, ", and I'm ", age, " years old.")
return(new_string)
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction(my_name, my_age)
# Create a variable `casual_intro` by substituting "Hello, my name is",
# with "Hey, I'm" in your `my_intro` variable
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
# Create a variable `loud_intro`, which is `my_intro` in all upper-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all capital letters
loud_intro <- toupper(my_intro)
# Create a variable `quiet_intro`, which is `my_intro` in all lower-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all lower-case letters
quiet_intro <- tolower(my_intro)
# Create a new variable `capitalized_intro`, which is your `my_intro` variable
# but with each word capitalized
# Hint: Google search the stringr function `str_to_title`
capitalized_intro <- str_to_title(my_intro)
# Using the `str_count` function from stringr, create a variable `occurrences`
# that stores the # of times the letter "e" appears in `my_intro`
occurences <- str_count(my_intro, "e")
# Write a function `double()` that takes in a value and
# returns that value multiplied by 2
double <- function(value) {
value <- value * 2
return(value)
}
# Using your `double()` function, create a variable `minutes_in_two_days`,
# which is the number of minutes in two days
minutes_in_two_days <- double(minutes_in_a_day)
# Assignment 2: Foundational Skills
#
# Before you get started:
# - Set your working directory to "source file location" using the Session menu
# - Run the following line of code to delete all variables in your workspace
#     (This will make it easier to test your script)
rm(list = ls())
### Set Up and Defining Variables #############################################
# Load the `stringr` package (install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a variable `my_age` that is equal to your age
my_age <- 19
# Create a variable `my_name` that is equal to your first name
my_name <- "Kevin"
# Using a multiplication expression, create a variable `minutes_in_a_day` that
# is equal to the number of minutes in a day
minutes_in_a_day <- 24 * 60
# Using a multiplication expression, create a variable `hours_in_a_year` that
# is equal to the number of hours in a year
hours_in_a_year <- 365 * 24
# Create a variable `more_minutes_than_hours` that is a boolean (TRUE/FALSE)
# It should be TRUE if there are more minutes/day than hours/year
# Otherwise, it should be FALSE
more_minutes_than_hours <- minutes_in_a_day < hours_in_a_year
### Working with Functions ####################################################
# Write a function named `make_introduction()` that takes in
# two arguments called `name` and `age`
# This function should return a string value equal to
# "Hello, my name is {name}, and I'm {age} years old." but {name} and {age}
# should take on the values passed to the function
# Make sure that proper spacing is used (e.g., you shouldn't have multiple
# spaces between words, and you should have a space after a comma)
# Hint: Google search for "R paste paste0 difference"
#       Try reading a few pages to understand how to use each
make_introduction <- function(name, age) {
new_string <- paste0("Hello, my name is ", name, ", and I'm ", age, " years old.")
return(new_string)
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction(my_name, my_age)
# Create a variable `casual_intro` by substituting "Hello, my name is",
# with "Hey, I'm" in your `my_intro` variable
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
# Create a variable `loud_intro`, which is `my_intro` in all upper-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all capital letters
loud_intro <- toupper(my_intro)
# Create a variable `quiet_intro`, which is `my_intro` in all lower-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all lower-case letters
quiet_intro <- tolower(my_intro)
# Create a new variable `capitalized_intro`, which is your `my_intro` variable
# but with each word capitalized
# Hint: Google search the stringr function `str_to_title`
capitalized_intro <- str_to_title(my_intro)
# Using the `str_count` function from stringr, create a variable `occurrences`
# that stores the # of times the letter "e" appears in `my_intro`
occurences <- str_count(my_intro, "e")
# Write a function `double()` that takes in a value and
# returns that value multiplied by 2
double <- function(value) {
return(value * 2)
}
minutes_in_two_days <- double(minutes_in_a_day)
cube <- function(number) {
return(number ^ 3)
twenty_seven <- cube(3)
cube <- function(number) {
return(number ^ 3)
}
# Create a variable `twenty_seven` by passing 3 to your `cube()` function
twenty_seven <- cube(3)
# Assignment 2: Foundational Skills
#
# Before you get started:
# - Set your working directory to "source file location" using the Session menu
# - Run the following line of code to delete all variables in your workspace
#     (This will make it easier to test your script)
rm(list = ls())
### Set Up and Defining Variables #############################################
# Load the `stringr` package (install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a variable `my_age` that is equal to your age
my_age <- 19
# Create a variable `my_name` that is equal to your first name
my_name <- "Kevin"
# Using a multiplication expression, create a variable `minutes_in_a_day` that
# is equal to the number of minutes in a day
minutes_in_a_day <- 24 * 60
# Using a multiplication expression, create a variable `hours_in_a_year` that
# is equal to the number of hours in a year
hours_in_a_year <- 365 * 24
# Create a variable `more_minutes_than_hours` that is a boolean (TRUE/FALSE)
# It should be TRUE if there are more minutes/day than hours/year
# Otherwise, it should be FALSE
more_minutes_than_hours <- minutes_in_a_day < hours_in_a_year
### Working with Functions ####################################################
# Write a function named `make_introduction()` that takes in
# two arguments called `name` and `age`
# This function should return a string value equal to
# "Hello, my name is {name}, and I'm {age} years old." but {name} and {age}
# should take on the values passed to the function
# Make sure that proper spacing is used (e.g., you shouldn't have multiple
# spaces between words, and you should have a space after a comma)
# Hint: Google search for "R paste paste0 difference"
#       Try reading a few pages to understand how to use each
make_introduction <- function(name, age) {
new_string <- paste0("Hello, my name is ", name, ", and I'm ", age, " years old.")
return(new_string)
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction(my_name, my_age)
# Create a variable `casual_intro` by substituting "Hello, my name is",
# with "Hey, I'm" in your `my_intro` variable
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
# Create a variable `loud_intro`, which is `my_intro` in all upper-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all capital letters
loud_intro <- toupper(my_intro)
# Create a variable `quiet_intro`, which is `my_intro` in all lower-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all lower-case letters
quiet_intro <- tolower(my_intro)
# Create a new variable `capitalized_intro`, which is your `my_intro` variable
# but with each word capitalized
# Hint: Google search the stringr function `str_to_title`
capitalized_intro <- str_to_title(my_intro)
# Using the `str_count` function from stringr, create a variable `occurrences`
# that stores the # of times the letter "e" appears in `my_intro`
occurences <- str_count(my_intro, "e")
# Write a function `double()` that takes in a value and
# returns that value multiplied by 2
double <- function(value) {
return(value * 2)
}
# Using your `double()` function, create a variable `minutes_in_two_days`,
# which is the number of minutes in two days
minutes_in_two_days <- double(minutes_in_a_day)
# Write a function `cube()` that takes in a value and returns that value cubed
cube <- function(number) {
return(number ^ 3)
}
# Create a variable `twenty_seven` by passing 3 to your `cube()` function
twenty_seven <- cube(3)
cube <- function(number) {
return(number ^ 3)
}
cube <- function(number) {
return(number^ 3)
}
double <- function(value) {
return(value * 2)
}
inches_to_cm <- function(inches) {
return(inches * 2.54)
}
print(inches_to_cm(2))
inches_to_cm <- function(inches) {
return(inches * 2.54)
}
print(inches_to_cm(2))
twenty_seven <- cube(3)
print(twenty_seven)
setwd("~/Documents/INFO 201/a2-speedguy00")
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list = ls())
jkjkjkjkjkj
jhjhjh
# Assignment 2: Foundational Skills
#
# Before you get started:
# - Set your working directory to "source file location" using the Session menu
# - Run the following line of code to delete all variables in your workspace
#     (This will make it easier to test your script)
rm(list = ls())
### Set Up and Defining Variables #############################################
# Load the `stringr` package (install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a variable `my_age` that is equal to your age
my_age <- 19
# Create a variable `my_name` that is equal to your first name
my_name <- "Kevin"
# Using a multiplication expression, create a variable `minutes_in_a_day` that
# is equal to the number of minutes in a day
minutes_in_a_day <- 24 * 60
# Using a multiplication expression, create a variable `hours_in_a_year` that
# is equal to the number of hours in a year
hours_in_a_year <- 365 * 24
# Create a variable `more_minutes_than_hours` that is a boolean (TRUE/FALSE)
# It should be TRUE if there are more minutes/day than hours/year
# Otherwise, it should be FALSE
more_minutes_than_hours <- minutes_in_a_day < hours_in_a_year
### Working with Functions ####################################################
# Write a function named `make_introduction()` that takes in
# two arguments called `name` and `age`
# This function should return a string value equal to
# "Hello, my name is {name}, and I'm {age} years old." but {name} and {age}
# should take on the values passed to the function
# Make sure that proper spacing is used (e.g., you shouldn't have multiple
# spaces between words, and you should have a space after a comma)
# Hint: Google search for "R paste paste0 difference"
#       Try reading a few pages to understand how to use each
make_introduction <- function(name, age) {
new_string <- paste0("Hello, my name is ", name, ", and I'm ", age, " years old.")
return(new_string)
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction(my_name, my_age)
# Create a variable `casual_intro` by substituting "Hello, my name is",
# with "Hey, I'm" in your `my_intro` variable
casual_intro <- gsub("Hello, my name is", "Hey, I'm", my_intro)
# Create a variable `loud_intro`, which is `my_intro` in all upper-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all capital letters
loud_intro <- toupper(my_intro)
# Create a variable `quiet_intro`, which is `my_intro` in all lower-case letters
# You should do this by using a function to convert your `my_intro` variable
# into all lower-case letters
quiet_intro <- tolower(my_intro)
# Create a new variable `capitalized_intro`, which is your `my_intro` variable
# but with each word capitalized
# Hint: Google search the stringr function `str_to_title`
capitalized_intro <- str_to_title(my_intro)
# Using the `str_count` function from stringr, create a variable `occurrences`
# that stores the # of times the letter "e" appears in `my_intro`
occurences <- str_count(my_intro, "e")
# Write a function `double()` that takes in a value and
# returns that value multiplied by 2
double <- function(value) {
return(value * 2)
}
# Using your `double()` function, create a variable `minutes_in_two_days`,
# which is the number of minutes in two days
minutes_in_two_days <- double(minutes_in_a_day)
# Write a function `cube()` that takes in a value and returns that value cubed
cube <- function(number) {
return(number ^ 3)
}
# Create a variable `twenty_seven` by passing 3 to your `cube()` function
twenty_seven <- cube(3)
print(twenty_seven)
install.packages("gplots")
library("ggplots2")
library("ggplot2")
install.packages(ggplot2)
install.packages("ggplot2")
midwest
library("ggplot2")
midwest
geom_hex(mapping = aes(x = percollege, y = peradultpoverty))
ggplot(data = midwest) + geom_hex(mapping = aes(x = percollege, y = peradultpoverty))
ggplot(data = midwest) + geom_hex(mapping = aes(x = percollege, y = percadultpoverty))
install.packages(hexbin)
install.packages("hexbin")
ggplot(data = midwest) + geom_hex(mapping = aes(x = percollege, y = percadultpoverty))
install.packages("plotly")
install.packages("leaflet")
shiny::runApp('Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('Documents/INFO 201/AB-3-Group-Project')
setwd("~/Documents/INFO 201/AB-3-Group-Project/Server")
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
server <- function(input, output){
output$traffic_map <- renderLeaflet({
relative_data <- traffic_collision %>%
filter(input$Select == SEVERITYDESC) %>%
filter(as.Date(INCDATE) >= input$dateRange[1]
& as.Date(INCDATE) <= input$dateRange[2])
draw_map(relative_data)
})
renderPlot <- ({
relative_data <- traffic_collision %>%
filter(WEATHER != "") %>%
filter(WEATHER == input$weather)
ggplot(data = relative_data) +
geom_bar(mapping = aes(x = WEATHER, fill = SEVERITYDESC)) +
labs(x = "Weather Type", y = "Count",
title = "Number of Collisions vs. Weather Type")
})
}
page_two_sidePanel <- sidebarPanel(
checkboxGroupInput(
inputId = "weather",
label = "Select Weather of Collision",
choices = unique(traffic_collision$WEATHER)
)
)
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp()
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
library("lintr")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_ui.R")
setwd("~/Documents/INFO 201/AB-3-Group-Project/UI")
lint("app_ui.R")
runApp('~/Documents/INFO 201/AB-3-Group-Project')
lint("app_ui.R")
lint("app_ui.R")
lint("app_ui.R")
runApp('~/Documents/INFO 201/AB-3-Group-Project')
lint("app_ui.R")
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
lint("app_ui.R")
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='ab3project', token='A4F03485BA261C9B186E4B36563584F5', secret='VF/XOzZiyh/utvm3QhbefappF2QanDEAVlYAOkxC')
rsconnect::setAccountInfo(name='ab3project', token='A4F03485BA261C9B186E4B36563584F5', secret='VF/XOzZiyh/utvm3QhbefappF2QanDEAVlYAOkxC')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
runApp('~/Documents/INFO 201/AB-3-Group-Project')
